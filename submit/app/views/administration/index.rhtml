<style type="text/css">
  TH { 
    padding-right: 15px;
    min-width: 100px;
    text-align: left;
  }
  TD {
    padding-right: 15px;
  }
</style>
<div style="float:right; text-align: center; width: 25%">
  <b>Free Space</b><br/>
  <% free_space_for_files(@files).each do |volume| %>
    <%= google_pie_chart([["Used - #{volume[:used_human]}", volume[:used].to_i], ["Free - #{volume[:avail_human]}", volume[:avail].to_i]], :chtt => "#{volume[:mount]}+(#{volume[:fs]})", :cht => "p3", :width => 300, :height => 100 ) %><br/>
  <% end %>
  <b>Webserver CPU Usage</b><br/>
  <%= google_ometer_chart(get_cpu_usage_of_self) %>
</div>
<div style="float: left; width: 75%">
  <h1>Active (...ing)</h1>
  <div style="padding-left: 3px">
<!--
  <b>Running state:</b> 
  <% confirm = "Setting to false will background any running job and start the next command in the queue (if any). Continue?" if CommandController.running_flag %>
  <%= form_tag url_for(:action => :set_running_flag), { :id => "running_form", :style => "display: inline" } %>
    <select name="running_flag"><%= options_for_select [ true, false ], CommandController.running_flag %></select>
    <%= submit_tag "Set", :confirm => confirm %>
  </form>
  <b style="margin-left: 25px">Paused queue:</b> 
-->
  <b>Pause queue:</b> 
  <%= form_tag url_for(:action => :set_paused_queue), { :id => "paused_form", :style => "display: inline" } %>
    <select name="paused_queue"><%= options_for_select [ true, false ], CommandController.paused_queue %></select>
    <%= submit_tag "Set" %>
  </form>
  <script type="text/javascript">
    $('running_form').reset();
    $('paused_form').reset();
  </script>
  <% if CommandController.paused_queue == true then %>
  [currently paused]
  <% else %>
  [currently not paused]
  <% end %>

  </div>
  <table>
    <tr>
      <th colspan="2">Command</th>
      <th>Owner</th>
      <th>Running On</th>
      <th>Control</th>
    </tr>
    <% @active_commands.each do |command| %>
    <tr>
      <td><%= link_to command.id, "#cmd_#{command.id}" %></td> 
      <td><%= link_to command.class.name, url_for(:controller => :pipeline, :action => :command_status, :id => command) %></td>
      <td><%= command.project.user.login if command.project %></td> 
      <td><%= command.host if command.host %></td>
      <td>
         <% if command.throttle == true then %>
            <%= link_to "continue after completion", url_for(:action => :unthrottle_command, :id => command.id) %>
         <% elsif command.throttle == false then %>
            <%= link_to "end after completion", url_for(:action => :throttle_command, :id => command.id) %>
         <% else %>
            [undef var]
         <% end %>
      </td>
    </tr>
    <% end %>
  </table>
  <h1>Queue</h1>
  <table>
    <tr>
      <th colspan="2">Command</th>
      <th>Position in queue</th>
      <th>Owner</th>
      <th>Control</th>
    </tr>
    <% @all_waiting_commands.each do |command| %>
    <tr>
      <td><%= link_to command.id, "#cmd_#{command.id}" %></td> 
      <td><%= link_to command.class.name, url_for(:controller => :pipeline, :action => :command_status, :id => command) %></td>
      <td><%= Inflector.ordinalize(@all_waiting_commands.index(command)+1) %></td>
      <td><%= command.project.user.login %></td> 
      <td>
        <% if command.status == Command::Status::QUEUED then %>
          <%= link_to "Pause", :action => :pause, :id => command.id %>,
        <% else %>
          Unpause and
          <%= link_to "keep queue position", :action => :unpause, :id => command.id %>,
        <% end %>
        <%= link_to "requeue at bottom", :action => :requeue, :id => command.id %>
        or
        <%= link_to "destroy", url_for(:action => :destroy_from_queue, :id => command.id), :confirm => "Really destroy? Not just pause?" %>.
      </td>
    </tr>
    <% end %>
  </table>
  <h1>All Commands</h1>
  <table>
    <tr><th colspan="2">Command</th><th>Project</th><th>Status</th><th>User</th><th>Host</th><th>Start</th><th>End</th></tr>
    <% show_commands = @show_all ? @commands.sort { |a,b| b.id <=> a.id } : @commands.sort { |a,b| b.id <=> a.id }[0..150] %>
    <% show_commands.each do |command| %>
      <tr>
        <td><a style="text-decoration: none; color: black" name="<%= "cmd_#{command.id}" %>"><%= command.id %></a></td>
        <td><%= link_to command.class.name, url_for(:controller => :pipeline, :action => :command_status, :id => command) %></td>
        <td><%= command.project ? link_to(command.project.name, url_for(:controller => :pipeline, :action => :show, :id => command.project)) : "Orphaned" %></td>
        <td><%= command.status.gsub(/ /, "&nbsp;") %></td>
        <td><%= command.project ? link_to(command.project.user.login, url_for(:controller => :account, :action => :change_profile, :id => command.project.user)) : "Orphaned" %></td>
        <td><%= command.host if command.host %></td>
        <td><%= command.start_time.nil? ? "Never started" : command.start_time.strftime("%H:%M:%S&nbsp;on&nbsp;%Y-%m-%d") %></td>
        <td><%= command.end_time.nil? ? "Never finished" : command.end_time.strftime("%H:%M:%S&nbsp;on&nbsp;%Y-%m-%d") %></td>
      </tr>
    <% end %>
  </table>
  <% if @show_all %>
    <%= button_to "Show 150 Commands", {}, :method => "get" %>
  <% else %>
    <%= button_to "Show All #{@commands.size} Commands", {} , :name => "show_all", :method => "get" %>
  <% end %>
</div>


