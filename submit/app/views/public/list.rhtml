<style type="text/css">
  TH.banner-top { background-color: #FAFAFA; border-bottom: thin solid black }
  TH.banner-bottom { background-color: #FAFAFA; border-top: thin solid black }
  TH.tophr { border-top: medium solid grey; }
  TH.bottomhr { border-bottom: medium solid grey; }
  TR.titles TH { vertical-align: top; }
  SELECT.header_select { margin: 0px; }
  TR.titles TH.contains_select A { position: relative; top: -7px }
  TR.titles TH.contains_select SELECT { position: relative; top: -7px }

  SUP A.superseded, SUP A.deprecated { font-weight: bold; cursor: pointer }
</style>
<script type="text/javascript">
  var deprecate_alert = function(e) { alert(
      "Deprecated projects are considered to contain bad or\n" +
      "invalid data. Generally, a new experiment is done, and\n" +
      "the new data replaces the old. Projects that say\n" +
      "\"deprecated by #nn\" have replacement data. Projects\n" +
      "that just say \"retracted\" have no replacement data.\n\n" + 
      "If there is a replacement experiment, please see the\n" + 
      "deprecating project for this newer data."
      );
  };
  var supersede_alert = function(e) { alert(
      "Superseded projects are still considered to contain\n" +
      "valid data, but the experiment used to generate the data\n" +
      "has been re-done, likely with a larger scope or with more\n" +
      "widespread coverage.\n\n" + 
      "See the superseding project for this newer data."
      );
  };
  Event.observe(window, "load", function(e) {
    $$('SUP A.deprecated').each(function(q) {
      q.observe("click", deprecate_alert);
    });
    $$('SUP A.superseded').each(function(q) {
      q.observe("click", supersede_alert);
    });
  });
</script>

Below, you can find:
<ul>
  <li>All available files for fully vetted and released projects, for all data providers.</li>
  <li>Any data files that have been generated by users submitting data directly.</li>
  <li>Raw submitted data for any data providers.</li>
</ul>
<br/>
If you want to download data in bulk, please try:
<ul>
  <li>Bulk downloads of full submissions for the <%= link_to "Apr 01, 2011 fly data freeze", :controller => :bulk_download, :selected_freeze => "dmelanogaster_2011-04-02", :matrix_style => "experiment_type_vs_stage", :show_matrix => "true", :bulk_tab => "filter", :include_na_columns => "true" %>. <b>NEW</b></li>
  <li>Bulk downloads of full submissions for the <%= link_to "Oct 19, 2009 fly data freeze", :controller => :bulk_download, :selected_freeze => "dmelanogaster_2009-10-19", :matrix_style => "experiment_type_vs_stage", :show_matrix => "true", :bulk_tab => "filter", :include_na_columns => "true" %>.</li>
  <li>Bulk downloads of full submissions <%= link_to "via the bulk downloads tool", :controller => :bulk_download, %>.</li>
  <li>The <%= link_to "ModMine", "http://intermine.modencode.org/" %> data warehouse.</li>
</ul>

<% if @projects.blank? || @projects.size == 0 %>
  <% if params[:pi] then %>
  <p>There are no released for this PI, you can go back to <%= link_to "View All", :action => :list %>.</p>
  <% else %>
    <p>There are no released projects.</p>
  <% end %>
<% end %>

<table class="archive_list2" style="width: 70%; position: relative; left: -25px">
  <tr><td colspan="6" style="text-align: left">
      <% form_tag({ :action => :set_show_deprecated }, :id => "show_deprecated_form") do %>
        <% show_deprecated = session[:show_deprecated] || false %>
        <%= check_box_tag "show_deprecated", (!show_deprecated).to_s, show_deprecated, :onchange => "$(this).form.submit()" %>
        <%= label_tag "show_deprecated", "Show deprecated submissions." %>
      <% end %>
      <% if current_user.is_a?(Moderator) %>
        <% form_tag({ :action => :set_show_noreadme }, :id => "show_noreadme_form") do %>
          <% show_noreadme = session[:show_noreadme] || false %>
          <%= check_box_tag "show_noreadme", (!show_noreadme).to_s, show_noreadme, :onchange => "$(this).form.submit()" %>
          <%= label_tag "show_noreadme", "Show submissions with no README (moderators only)." %>
        <% end %>
      <% end %>
      <script type="text/javascript">
        $('show_deprecated_form').reset();
        <% if current_user.is_a?(Moderator) %>$('show_noreadme_form').reset();<% end %>
      </script>
  </td></tr>
  <tr>
    <br/>
    <td colspan="8" style="text-align: left">
      <div style="font-size: 60%">
        Projects per page:
        <% [25, 50, 75, 100].each do |page_size| %>
          <%= "<b>" if session[:public_list_page_size] == page_size %>
          <%= link_to_unless session[:public_list_page_size] == page_size, page_size, :page_size => page_size, :pi => params[:pi] %>
          <%= "</b>" if session[:public_list_page_size] == page_size %>
        <% end %>
      </div>
      Select page:
      <% (1..@num_pages).each do |pagenum| %>
        <%= "<b>" if @cur_page == pagenum %>
          <%= link_to_unless @cur_page == pagenum, pagenum, :page => pagenum, :pi => params[:pi] %>
        <%= "</b>" if @cur_page == pagenum %>
      <% end %>
      <br/>
      <%= link_to_if @has_prev_page, "&lt; previous", :page => @cur_page-1, :pi => params[:pi] %>
      |
      <%= link_to_if @has_next_page, "next &gt;", :page => @cur_page+1, :pi => params[:pi] %>
      <br/>

    </td>
  </tr>
  <tr><th colspan="8" class="tophr">&nbsp;</td></tr>
  <tr class="titles">
    <% refresh_action_name = :list -%>
    <th><%= link_to "ID", :action => refresh_action_name, :sort => { 'id' => @new_sort_direction['id'] } %></th>
    <th class="hardwrap">
      <%= link_to "Submission&nbsp;Name", :action => refresh_action_name, :sort => { 'name' => @new_sort_direction['name'] } %>
      <br/>
      <span style="font-size: 80%">(click for readme)</span>
    </th>
    <th><%= link_to "Status", :action => refresh_action_name, :sort => { 'released?' => @new_sort_direction['released?'] } %></th>
    <th class="contains_select"><%= link_to "PI:", :action => refresh_action_name, :sort => { 'pi' => @new_sort_direction['pi'] } %>&nbsp;<% form_tag url_for(:action => :list), :method => :get, :style => "display:inline" do %>
        <%
          pi_options = [ [ "All", "" ] ] + @pis.sort.map { |pi| [ pi.split(",")[0], pi ] }
          pi_options += @organisms_by_pi.values.uniq.compact.map { |o| [ o.sub(/^(.).+ /, 'All \1. '), "All #{o}" ] }
        %>
        <select class="header_select" onchange="this.form.submit()" name="pi"><%= options_for_select pi_options, params[:pi] %></select>
    <% end %></th>
    <th>
      Data
      <br/>
      <span style="font-size: 80%">(click to download)</span>
    </th>
    <th>
      Generated Files
      <br/>
      <span style="font-size: 80%">(produced by the DCC)</span>
    </th>
    <th>
      <%= link_to "Upload&nbsp;Date", :action => refresh_action_name, :sort => { 'most_recent_upload_date' => @new_sort_direction['most_recent_upload_date'] } %>
      <br/>
      <span style="font-size: 80%">(most recent upload)</span>
    </th>
    <th>
      <%= link_to "Embargoed&nbsp;Until", :action => refresh_action_name, :sort => { 'embargo_end_date' => @new_sort_direction['embargo_end_date'] } %>
      <br/>
      <%= link_to "(data release policy)", "http://www.modencode.org/docs/modENCODE_publication_policy.pdf", :popup => true, :style => "font-size: 80%" %>
    </th>
  </tr>
  <tr><th colspan="8" class="tophr">&nbsp;</th></tr>
    
  <% 
    colors = [ '#eeeeee', '#f2f2ff', '#bbbbbb', '#cceecc' ]
    i = 0
  %>
  <% @projects.each do |project| %>
    <%
      color = colors[i%2]
      i += 1
      color = colors[3] if project.superseded?
      color = colors[2] if project.deprecated?

    %>
    <tr style="background-color: <%= color %>">
      <td style="text-align: left"><%= link_to "modENCODE_#{project.id}", {:action => 'show', :id => project.id, :controller => 'pipeline'} %></td>
      <td class="name hardwrap">
        <%
          wrapped_name = project.name
          wrapped_name.gsub!(/(.{35})/, "\\1\n")
        %>
        <% if (Project::Status::ok_next_states(project).include?(Project::Status::AWAITING_RELEASE) && (project.same_pi?(@viewer_lab) || current_user.is_a?(Moderator))) || project.status == Project::Status::RELEASED then %>
          <%= link_to wrapped_name, :action => 'citation', :id => project %>
        <% elsif project.has_readme? then %>
          <%= link_to wrapped_name, :action => 'readme', :id => project.id %>
        <% else %>
          <%= link_to wrapped_name, { :action => 'show', :id => project.id, :controller => 'pipeline' }, :confirm => "This project has no description, so you are being directed to the project page in the pipeline." %>
        <% end %>
      </td>
      <td class="status">
        <% if project.deprecated? then %>
          <span style="text-decoration: line-through">
            <%= project.released? ? "vetted and released" : "unvetted" %>
          </span><br/>
          <% if project.retracted? then %>
            retracted<sup><a class="deprecated">?</a></sup>
          <% else %>
            deprecated<sup><a class="deprecated">?</a></sup>
          <% end %>
          <%= "by #" + project.deprecated_project_id.to_s unless project.deprecated_by_project.nil? %>
        <% elsif project.superseded? then %>
          <%= project.released? ? "vetted and released" : "unvetted" %><br/>
          superseded<sup><a class="superseded">?</a></sup>
          <%= "by #" + project.superseded_project_id.to_s unless project.superseded_by_project.nil? %>
        <% else %>
          <%= project.released? ? "vetted and released" : "unvetted" %>
        <% end %>
      </td>
      <td style="text-align: left">
        <div style="width: 18px; float: left">
          <%=
            o = project.released_organism
            o = @organisms_by_pi[project.pi] if o.nil?
            if o =~ /C.* elegans/ then
              image_tag "worm.png", :alt => o
            elsif o =~ /D.* melanogaster/ then
              image_tag "fly.png", :alt => o
            else
              "?"
            end
          %>
        </div>
        <%= project.pi.split(",")[0] %>
      </td>
      <td class="status">
        <%
          unvetted_statuses = Array.new
          unvetted_statuses.push("raw") if project.has_raw_data?
          unvetted_statuses.push("signal") if project.has_wig_data?
          unvetted_statuses.push("feature") if project.has_feature_data?
          unvetted_status = unvetted_statuses.andjoin + " data"
          end_date = project.embargo_end_date
          end_date_text = end_date ? end_date : "unknown/no data"
        %>
        <% if end_date.nil? || end_date > Date.today then %>
          <%
            confirm_text = "This data is embargoed until #{end_date}. You may not publish genome-wide analyses using this data until the embargo period expires. See the modENCODE data release policy for details."
            if project.status != "released" then
              confirm_text += "\n\nIMPORTANT: This submission is PRELIMINARY data, not yet vetted by the DCC. It MAY NOT HAVE UNDERGONE QC and MAY BE REMOVED OR ALTERED."
            end
          %>
          <%= link_to unvetted_status, { :action => "download", :id => project, :root => :data }, :confirm => confirm_text %>
        <% else %>
          <%= link_to unvetted_status, { :action => "download", :id => project, :root => :data } %>
        <% end %>
        <% if @modmine_ids.include?(project.id) then %>
          <br/>
          <span style="font-size: 80%">[<%= link_to "view in ModMine", @modmine_link_template % project.id %>]</span>
        <% end %>
      </td>
      <td class="actions">
        <% no_dcc_data = true %>
        <% if (Project::Status::ok_next_states(project).include?(Project::Status::LOADING) && (@viewer_pi == project.pi || current_user.is_a?(Moderator))) || project.status == Project::Status::RELEASED then %>
          <%= no_dcc_data ? "" : "|" %>
          <% no_dcc_data = false %>
          <% full_path = "/" + File.join("extracted", "/#{project.id}.chadoxml") %>
          <%= link_to "ChadoXML", url_for(:action => :get_file, :id => project) + full_path %>
        <% end %>
        <% if (Project::Status::ok_next_states(project).include?(Project::Status::CONFIGURING) && (@viewer_pi == project.pi || current_user.is_a?(Moderator))) || project.status == Project::Status::RELEASED then %>
          <%= no_dcc_data ? "" : "|" %>
          <% no_dcc_data = false %>
          <%= link_to "Tracks", :action => "download", :id => project, :root => :tracks %>
        <% end %>
        <% if (Project::Status::ok_next_states(project).include?(Project::Status::AWAITING_RELEASE) && (@viewer_pi == project.pi || current_user.is_a?(Moderator))) || project.status == Project::Status::RELEASED then %>
          <%= no_dcc_data ? "" : "|" %>
          <% no_dcc_data = false %>
          <%= link_to "GBrowse Stanza", :action => "get_gbrowse_stanzas", :id => project %>
        <% end %>
        <% if no_dcc_data then %>
          <span style="color:#AAAAAA">No generated data available.</span>
        <% end %>
      </td>
      <td>
      <%= upload_date = project.most_recent_upload_date
          if upload_date then
              upload_date
            else
              "unknown/no data"
            end
      %>
      </td>
      <td>
        <%= end_date_text %>
      </td>
    </tr>
  <% end %>
</table>
