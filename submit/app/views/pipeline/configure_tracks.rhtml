<style type="text/css">
  H2 { margin-bottom: 8px }
  HR { margin-top: 4px; margin-bottom: 0px; width: 70%; text-align: left; margin: 0 auto 0 0; }
</style>
<%
  default_chr = "3L"
  default_fmin = 6066513
  default_fmax = 6266513
%>
<script src="/gbrowse/js/prototype.js" type="text/javascript"></script>
<script src="/gbrowse/js/scriptaculous.js" type="text/javascript"></script>
<script src="/gbrowse/js/yahoo-dom-event.js" type="text/javascript"></script>
<script src="/gbrowse/js/buttons.js" type="text/javascript"></script>

<script src="/gbrowse/js/toggle.js" type="text/javascript"></script>
<script src="/gbrowse/js/karyotype.js" type="text/javascript"></script>
<script src="/gbrowse/js/controller.js" type="text/javascript"></script>
<script src="/gbrowse/js/rubber.js" type="text/javascript"></script>
<script src="/gbrowse/js/overviewSelect.js" type="text/javascript"></script>
<script src="/gbrowse/js/detailSelect.js" type="text/javascript"></script>
<script src="/gbrowse/js/regionSelect.js" type="text/javascript"></script>
<script src="/gbrowse/js/track.js" type="text/javascript"></script>
<script src="/gbrowse/js/balloon.js" type="text/javascript"></script>

<script src="/gbrowse/js/balloon.config.js" type="text/javascript"></script>

<script type="text/javascript">
  Controller.rerender_track = function(track_name, chr, fmin, fmax) {
    var gbtrack = this.gbtracks.get(track_name);
    $(gbtrack.track_image_id).setOpacity(0.3);
    this.set_last_update_key(gbtrack);

    new Ajax.Request('/gbrowse/cgi-bin/gbrowse/modencode/?name=' + chr + '%3A' + fmin + '..' + fmax,{
      method:     'post',
      parameters: {
        rerender_track:  1,
        track_name: track_name,
      },
      onSuccess: function(transport) {
        var results    = transport.responseJSON;
        var track_keys = results.track_keys;
        if (results.display_details == 0){
          $(gbtrack.track_image_id).setOpacity(0);
        }
        else{
          time_key = create_time_key();
          for (var track_name in track_keys){
              Controller.retrieve_tracks.set(track_name,true);
              Controller.ret_track_time_key.set(track_name,time_key);
          } // end for
          Controller.get_remaining_tracks(track_keys,1000,1.1,time_key, chr, fmin, fmax);
        } 
      }, // end onSuccess
    }); // end Ajax.Request
  }; // end rerender_track
  Controller.get_remaining_tracks = function (track_keys,time_out,decay,time_key, chr, fmin, fmax){

    var track_names = [];
    var finished = true;
    var track_key_str = '';
    this.retrieve_tracks.keys().each(
      function(track_name) {
        if(Controller.retrieve_tracks.get(track_name)){
          if (Controller.ret_track_time_key.get(track_name) == time_key){
            track_names.push(track_name);
            track_key_str += '&tk_'+escape(track_name)+"="+track_keys[track_name];
            finished = false;
          }
        }
      }
    );

    if (finished){
      return;
    }

    new Ajax.Request('/gbrowse/cgi-bin/gbrowse/modencode/?name=' + chr + '%3A' + fmin + '..' + fmax,{
      method:     'post',
      parameters: $H({ retrieve_multiple: 1, 
                       track_names:     track_names, 
		    }).toQueryString()  + track_key_str,
      onSuccess: function(transport) {
        var continue_requesting = false;
        var results    = transport.responseJSON;
        var track_html_hash = results.track_html;
        for (var track_name in track_html_hash){
          track_html    = track_html_hash[track_name];

          var gbtrack = Controller.gbtracks.get(track_name);
          if (Controller.ret_track_time_key.get(track_name) == time_key){
            track_div = document.getElementById(gbtrack.track_div_id);
            if (track_html.substring(0,18) == "<!-- AVAILABLE -->"){
              track_div.hide();
              track_div.innerHTML = track_html;
              var img = $(gbtrack.track_image_id);
              track_div.innerHTML = "";
              track_div.insert(img);
              track_div.show();
              gbtrack.track_resolved();
              Controller.retrieve_tracks.set(track_name,false);
            }
            else if (track_html.substring(0,16) == "<!-- EXPIRED -->"){
              Controller.retrieve_tracks.set(track_name,false);
              if (gbtrack.expired_count >= expired_limit){
                $(gbtrack.track_image_id).setOpacity(0);
              }
              else{
                gbtrack.increment_expired_count();
                Controller.rerender_track(track_name, chr, fmin, fmax);
              }
            }
            else if (track_html.substring(0,14) == "<!-- ERROR -->"){
              gbtrack.track_resolved();
              Controller.retrieve_tracks.set(track_name,false);
              track_div.innerHTML = track_html;
            }
            else if (track_html.substring(0,16) == "<!-- DEFUNCT -->"){
              gbtrack.track_resolved();
              Controller.retrieve_tracks.set(track_name,false);
              $(gbtrack.track_image_id).setOpacity(0);
            }
            else {
              continue_requesting = true;
            }
          }
        }
        Controller.reset_after_track_load();
        if (continue_requesting){
          setTimeout( function() {
            Controller.get_remaining_tracks(track_keys,time_out*decay,decay,time_key, chr, fmin, fmax)
          } ,time_out);
        }
      }, // end onSuccess
    }); // end new Ajax.Request

  }; // end get_remaining_tracks

  Controller.update_coordinates = function(trackname, action, chr, fmin, fmax) {

    //Grey out image
    var gbtrack = Controller.gbtracks.get(trackname);
    $(gbtrack.track_image_id).setOpacity(0.3);
    
    new Ajax.Request('/gbrowse/cgi-bin/gbrowse/modencode/?name=' + chr + '%3A' + fmin + '..' + fmax,{
      method:     'post',
      parameters: {navigate: action},
      onSuccess: function(transport) {
        var results                 = transport.responseJSON;
        var track_keys              = results.track_keys;
        Controller.segment_info     = results.segment_info;

        this.last_update_key = create_time_key();
        gbtrack.set_last_update_key(this.last_update_key)

        Controller.rerender_track( trackname, chr, fmin, fmax);

      } // end onSuccess
      
    }); // end Ajax.Request
  }; // end update_coordinates

  // Allow number keys only (cribbed and adapted from T-mobile's website)
  function restrictNumeric(keyEvent) {
    var charCode = keyEvent.which ? keyEvent.which : keyEvent.keyCode;
    if (charCode == 13 || charCode == 3) {
      Event.stop(keyEvent);
      keyEvent.element().blur();
    }
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
      if (charCode == 189 || charCode == 45) {
        return true;
      } else if ((charCode >= 37 && charCode <= 40) && keyEvent.keyCode != 0) {
        // Arrow keys
        return true;
      } else {
        Event.stop(keyEvent);
        return false;
      }
    } else if (charCode == 8 || charCode == 46) {
      return true;
    } else {
      return true;
    }
  }
  function restrictText(keyEvent) {
    var charCode = keyEvent.which ? keyEvent.which : keyEvent.keyCode;
    if (charCode == 13 || charCode == 3) {
      Event.stop(keyEvent);
      keyEvent.element().blur();
    }
    if (charCode >= 97 && charCode <= 122) {
      // a-z
      return true;
    }
    if (charCode >= 65 && charCode <= 90) {
      // A-Z
      return true;
    }
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
      // 0-9, _, -, ' '
      if (charCode == 32 || charCode == 95 || charCode == 189 || charCode == 45) {
        return true;
      } else if ((charCode >= 37 && charCode <= 40) && keyEvent.keyCode != 0) {
        // Arrow keys
        return true;
      } else {
        return restrictNumeric(keyEvent);
      }
    } else if (charCode == 8 || charCode == 46) {
      return true;
    } else {
      return restrictNumeric(keyEvent);
    }
  }
  function hideTextField(evt) {
    var value = evt.element().getValue();
    evt.element().value = value.gsub(/[^a-zA-Z0-9_ -]/, '');
    hideField(evt);
  }
  function hideNumberField(evt) {
    var value = evt.element().getValue();
    evt.element().value = value.gsub(/-/, 'n').sub(/^n/, '-').gsub(/[^0-9-]/, '');
    hideField(evt);
  }
  function showForm(label, evt) {
    var elem = $(label).firstDescendant();
    elem.hide();
    var formfield = label.next();
    formfield.show();
    formfield.focus();
    formfield.select();
    Event.extend(evt).stop();
  }
  function hideField(evt) {
    var elem = evt.element();
    elem.previous().firstDescendant().innerHTML = elem.getValue();
    elem.hide();
    elem.previous().firstDescendant().show();
  }

  Controller.set_display_option('cache',0);

</script>
<h2 style="clear:both">Configure tracks for <%= link_to "submission ##{@project.id}", { :action => :show, :id => @project } %><hr/></h2>
<% if @released then %>
  <h2 style="clear:both; font-style: italic">This configuration has been approved by <%= "#{@ts_user.name} (#{@ts_user.login})" %>.<hr/></h2>
<% end %>
<div style="float:right">
  <%= link_to "View in GBrowse", "/gbrowse/cgi-bin/gbrowse/modencode/", :popup => true %>
  <br/>
  <%= button_to "Reset All", { :action => :configure_tracks, :reload => true, :id => @project.id, :reset_definitions => true }, :confirm => "Are you sure? You will lose all configuration changes." %>
</div>


<% @track_defs.sort.each do |stanzaname, definition| %>
  <% if @released then %>
    <%= form_remote_tag :url => { :action => :async_update_track_location, :id => @project.id, :reload => true }, :confirm => "This configuration has been approved; are you sure you want to reconfigure it?", :html => { :id => "form_#{stanzaname}", :action => "#" } %>
  <% else %>
    <%= form_remote_tag :url => { :action => :async_update_track_location, :id => @project.id }, :html => { :id => "form_#{stanzaname}", :action => "#" } %>
  <% end %>
    <input type="hidden" name="stanzaname" value="<%=stanzaname%>"/>
    <b>[<%= stanzaname %>]</b><br/>
    <% 
      chr = definition[:chr] || default_chr
      fmax = definition[:fmax] || default_fmax
      fmin = definition[:fmin] || default_fmin
      semantic_configs = definition[:semantic_zoom]
    %>
    <% definition.sort { |o, v| o.to_s <=> v.to_s }.each do |option, value| %>
      <% next if option.is_a? Symbol %>

      <% if @stanza_options[option] %>
        <span class="flipfield">
          <span onmousedown="showForm(this, event)">
            <%= option %> = 
            <span style="font-weight: bold" >
              <%= value %>
            </span>
          </span>
          <% if @stanza_options[option].is_a? Array then %>
            <select style="display:none" name="<%=option%>" id="<%="#{stanzaname}_#{option}"%>">
              <%= options_for_select @stanza_options[option], value %>
            </select>
            <script type="text/javascript">
              Event.observe($('<%="#{stanzaname}_#{option}"%>'), 'blur', hideField);
            </script>
          <% elsif @stanza_options[option] == :text %>
            <input type="text" style="display:none" name="<%=option%>" value="<%=h value%>" id="<%="#{stanzaname}_#{option}"%>"/>
            <script type="text/javascript">
              Event.observe($('<%="#{stanzaname}_#{option}"%>'), 'keypress', restrictText);
              Event.observe($('<%="#{stanzaname}_#{option}"%>'), 'blur', hideTextField);
            </script>
          <% elsif @stanza_options[option] == :integer %>
            <input type="text" style="display:none" name="<%=option%>" value="<%=value%>" id="<%="#{stanzaname}_#{option}"%>"/>
            <script type="text/javascript">
              Event.observe($('<%="#{stanzaname}_#{option}"%>'), 'keypress', restrictNumeric);
              Event.observe($('<%="#{stanzaname}_#{option}"%>'), 'blur', hideNumberField);
            </script>
          <% end %>
        </span>
      <% else %>
        <%= option %> = <%= value %>
      <% end %>
      <br/>

    <% end %>
    <% if semantic_configs.size > 0 then %><br/><% end %>
      <% semantic_configs.each do |zoom_level, zoom_definition| %>
        <span class="flipfield">
          <span onmousedown="showForm(this, event)" style="font-weight:bold">
            [<%= stanzaname %>:
            <span>
              <%= zoom_level %>
            </span>
          </span>
          <input size="6" type="text" style="display:none" name="zoom:<%=zoom_level%>" value="<%=zoom_level%>" id="<%="#{stanzaname}:#{zoom_level}"%>"/>
          <b>]</b>
          <script type="text/javascript">
            Event.observe($('<%="#{stanzaname}:#{zoom_level}"%>'), 'keypress', restrictNumeric);
            Event.observe($('<%="#{stanzaname}:#{zoom_level}"%>'), 'blur', hideNumberField);
          </script>
        </span>
        <br/>
        <% zoom_definition.sort { |o, v| o.to_s <=> v.to_s }.each do |option, value| %>
          <% if @stanza_options[option] %>
            <span class="flipfield">
              <span onmousedown="showForm(this, event)">
                <%= option %> = 
                <span style="font-weight: bold" >
                  <%= value %>
                </span>
              </span>
              <% if @stanza_options[option].is_a? Array then %>
                <select style="display:none" name="zoom:<%=zoom_level%>_<%=option%>" id="<%="#{stanzaname}:#{zoom_level}_#{option}"%>">
                  <%= options_for_select @stanza_options[option], value %>
                </select>
                <script type="text/javascript">
                  Event.observe($('<%="#{stanzaname}:#{zoom_level}_#{option}"%>'), 'blur', hideField);
                </script>
              <% elsif @stanza_options[option] == :text %>
                <input type="text" style="display:none" name="zoom:<%=zoom_level%>_<%=option%>" value="<%=value%>" id="<%="#{stanzaname}:#{zoom_level}_#{option}"%>"/>
                <script type="text/javascript">
                  Event.observe($('<%="#{stanzaname}:#{zoom_level}_#{option}"%>'), 'keypress', restrictText);
                  Event.observe($('<%="#{stanzaname}:#{zoom_level}_#{option}"%>'), 'blur', hideTextField);
                </script>
              <% elsif @stanza_options[option] == :integer %>
                <input type="text" style="display:none" name="zoom:<%=zoom_level%>_<%=option%>" value="<%=value%>" id="<%="#{stanzaname}:#{zoom_level}_#{option}"%>"/>
                <script type="text/javascript">
                  Event.observe($('<%="#{stanzaname}:#{zoom_level}_#{option}"%>'), 'keypress', restrictNumeric);
                  Event.observe($('<%="#{stanzaname}:#{zoom_level}_#{option}"%>'), 'blur', hideNumberField);
                </script>
              <% end %>
            </span>
          <% else %>
            <%= option %> = <%= value %>
          <% end %>
          <br/>
        <% end %>
      <% end %>

    <div id="trackcontainer_<%= stanzaname %>">
      <input 
        type="text" value="<%=chr%>" name="chr" id="chr_<%= stanzaname %>" size="5"/>:<input 
        type="text" value="<%=fmin%>" name="fmin" id="fmin_<%= stanzaname %>" size="5"/>..<input 
        type="text" value="<%=fmax%>" name="fmax" id="fmax_<%= stanzaname %>" size="5"/>

      <script type="text/javascript">
        Event.observe($('chr_<%=stanzaname%>'), 'keypress', restrictText);
        Event.observe($('fmin_<%=stanzaname%>'), 'keypress', restrictNumeric);
        Event.observe($('fmax_<%=stanzaname%>'), 'keypress', restrictNumeric);
      </script>
      <%= submit_tag "Update" %>
    </div>
  </form>
  <%= button_to "Delete stanza #{stanzaname}", { :action => :configure_tracks, :id => @project.id, :delete_stanza => stanzaname }, :confirm => "Really delete? You can restore with Reset All." %>
  <div id="track_<%= stanzaname %>"><br/><div style="border: thin grey dashed; width: 800px">Loading image...</div><img id="<%= stanzaname %>_image"/></div>
  <script type="text/javascript">
    $('form_<%=stanzaname%>').reset();
    var gbtrack_<%= stanzaname.gsub(/[^a-zA-Z0-9]/, "_") %> = new GBrowseTrack('<%= stanzaname %>', 'notype', 'detail');
    Controller.gbtracks.set('<%= stanzaname %>', gbtrack_<%= stanzaname.gsub(/[^a-zA-Z0-9]/, "_") %>);
    Controller.update_coordinates(
      '<%=stanzaname%>',
      'name:' + $('chr_<%=stanzaname%>').getValue() + ':' + $('fmin_<%=stanzaname%>').getValue() + '..' + $('fmax_<%=stanzaname%>').getValue(),
      $('chr_<%=stanzaname%>').getValue(),
      $('fmin_<%=stanzaname%>').getValue(),
      $('fmax_<%=stanzaname%>').getValue()
    );
  </script>


  <hr/>
  <br/>
<% end %>

<div>
  <%= button_to "Accept Configuration", { :action => :configure_tracks, :id => @project.id, :accept_config => true }, :disabled => @released %>
</div>
