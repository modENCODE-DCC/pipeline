<style type="text/css">
  .bold { font-weight: bold }
  DIV.smallLink { font-size: 60%; }
  DIV#rename { padding: 0px; margin: 0px }
  SPAN.additionalinfo { color: #444444; padding-left: 8px; font-size: 9px; font-style: italic }
  SPAN.additionalinfo A { color: #3333FF; }
  H2 { margin-bottom: 8px }
  HR { margin-top: 4px; margin-bottom: 0px; width: 70% }
  DIV.action { width: 200px; float: left; line-height: 25px; height: 25px; }
  DIV.arrow { width: 25px; font-size: 5%; float: left; height: 25px; line-height: 25px; }
  DIV.desc { width: 500px; float: left; font-size: 14px; height: 25px; }
  .comment { }
  .signature { margin-left: 2em; font-style: italic; color: #AAAAAA }
  DIV#comments { margin-left: 10px }
  DIV#comments ol {
    list-style: none;
    padding: 0; margin: 0;
    counter-reset: c <%= @comments.size+1 %>;
  }
  DIV#comments ol > li::before {
    content: counter(c) ".";
    counter-increment: c -1;
  }
</style>

<div id="command_panel">
  <%= render :partial => "command_panel" %>
</div>

<div style="float:left">
  <%#= periodically_call_remote :url => { :action => "command_panel", :id => @project }, :frequency => 5,
    :before => "showSpinner('command_panel')", :complete => "hideSpinner('command_panel')", :update => "command_panel" %>
  <script type="text/javascript">
    //<![CDATA[
    if (!spinner_updater) {
      spinner_updater = new PeriodicalExecuter(function() {showSpinner('command_panel'); new Ajax.Updater('command_panel', '<%= url_for(:action => "command_panel", :id => @project) %>', {asynchronous:true, evalScripts:true, onComplete:function(request){hideSpinner('command_panel')}})}, 5)
    }
    //]]>
  </script>

  <h2>Submission Details: <hr align="left"/></h2>
  <table border="0" style="margin-left: 0px; margin-bottom: 5px; margin-top: 0px;" class="status">
    <tr>
      <th>Submission:</th>  
      <td>
        <span class="bold"><%= @project.name %></span>
        (ID: <span class="bold">modENCODE_<%= @project.id %></span>)
      </td>
    </tr>
    <tr>
      <th>Submitter:</th>  
      <td>
        <div><%= @project.user.name %> (<%= @project.user.login %>)</div>
        <span class="additionalinfo"><%= link_to "View all", { :action => :show_user, :user_id => @project.user_id } %> projects submitted by <%= @project.user.name %>.</span>
      </td>
    </tr>
    <tr>
      <th>Project PI:</th>  
      <td>
        <div><%= @project.pi.split(",")[0] %></div>
        <span class="additionalinfo"><%= link_to "View all", { :action => :show_group, :pi => @project.pi } %> projects for the <%= @project.pi.split(",")[0] %> group.</span>
      </td>
    </tr>
    <tr>
      <th>Age:</th>
      <td>
        <%
          # TODO: Time.now should be release data if there is a release date
          s = (Time.now - @project.created_at)
          m = ((s / 60) % 60).to_i  #minutes
          h = (((s/60)/60) % 24).to_i #hours
          d = (((s/60)/60)/24).to_i #days
          s = (s % 60).to_i #seconds
          if d > 0 then
            display = "#{d.to_s} days"
          elsif d <= 0 && h > 0 then
            display = "#{h.to_s} hours"
          else
            display = "#{m.to_s} minutes"
          end
        %>
        <div><%= display %></div>
        <span class="additionalinfo">Created <%= @project.created_at.strftime("%y %b %d at %H:%M PST"); %>, last updated <%= @project.updated_at.strftime("%y %b %d %H:%M PST"); %>.</span>
      </td>
    </tr>
    <tr>
      <th>Last Status:</th>
      <td><%= @project.status %></td>
    </tr>
  </table>
  <% if @user_can_write then %>
    <div style="font-style: italic; padding-left: 5px">
      <%= @user_is_owner ? "You can " : "As a moderater, you can " %>
      <%= link_to("rename", { :action => :edit, :id => @project }) %>,
      <%= link_to("delete", { :action => :delete, :id => @project }, :confirm => "Are you sure you want to permanently delete this submission?" ) %>, or
      change the associated <br/><%= link_to("lab / project", { :action => :edit_lab_project, :id => @project }) %> for
      this submission.
    </div>
  <% end %>
  <% pronoun = (current_user.is_a?(Moderator) && @project.user != current_user) ? "that've been" : "you've" %>
  <% if Project::Status::ok_next_states(@project).include?(Project::Status::AWAITING_RELEASE) then %>
    <div style="font-style: italic; padding-left: 5px; width: 70%">
      You can browse and download the <%= link_to "files #{pronoun} uploaded", { :controller => :public, :action => :download, :id => @project } %>, or<br/>
      the <%= link_to "tracks #{pronoun} found", { :controller => :public, :action => :download, :id => @project, :root => :tracks } %>, or 
      fetch the <%= link_to "ChadoXML", { :action => :download_chadoxml, :id => @project } %>.
      <% if @gbrowse_url then %>
        <br/>You can also <%= link_to "preview the tracks in GBrowse", @gbrowse_url, :popup => true %> or 
      <% end %>
      <%= link_to "download the GBrowse configuration stanza", { :controller => :public, :action => :get_gbrowse_stanzas, :id => @project } %>.
    </div>
  <% elsif Project::Status::ok_next_states(@project).include?(Project::Status::CONFIGURING) then %>
    <div style="font-style: italic; padding-left: 5px; width: 70%">
      You can browse and download the <%= link_to "files #{pronoun} uploaded", { :controller => :public, :action => :download, :id => @project } %>, or<br/>
      the <%= link_to "tracks #{pronoun} found", { :controller => :public, :action => :download, :id => @project, :root => :tracks } %>, or 
      fetch the <%= link_to "ChadoXML", { :action => :download_chadoxml, :id => @project } %>.
      <% if @gbrowse_url then %>
        <br/>You can also <%= link_to "preview the tracks in GBrowse", @gbrowse_url, :popup => true %>.
      <% end %>
    </div>
  <% elsif Project::Status::ok_next_states(@project).include?(Project::Status::LOADING) then %>
    <div style="font-style: italic; padding-left: 5px; width: 70%">
      You can browse and download the <%= link_to "files #{pronoun} uploaded", { :controller => :public, :action => :download, :id => @project } %> or<br/>
      fetch the <%= link_to "ChadoXML", { :action => :download_chadoxml, :id => @project } %>.
    </div>
  <% elsif Project::Status::ok_next_states(@project).include?(Project::Status::VALIDATING) then %>
    <div style="font-style: italic; padding-left: 5px; width: 70%">
      You can <%= link_to "browse and download", { :controller => :public, :action => :download, :id => @project } %> the files <%= pronoun %> uploaded.
    </div>
  <% end %>
  <br/>

  <h2>What needs to be done? <hr align="left"/></h2>
  <% unless @active_command.nil? %>
    <i>Please wait, a command is currently executing.</i>
  <% end %>

  <%
    # TODO: Move these definitions into the commands themselves?
    organism = @project.released_organism
    if organism.nil? && File.exists?("#{RAILS_ROOT}/config/pi_organisms.yml") then
      organisms_by_pi = open("#{RAILS_ROOT}/config/pi_organisms.yml") { |f| YAML.load(f.read) }
      organism = organisms_by_pi[@project.pi] if organism.nil?
    end
    if organism =~ /C.* elegans/ then
      organism = "worm" 
    else
      organism = "fly" 
    end
    pos = 0
    command_definitions = [
      [
        :upload, 
        Project::Status::UPLOADING,
        "Upload #{"(more)" if @project.project_archives.size > 0} data",
        "Add or replace submission data by uploading another package",
        ""
      ],
      [
        :expand, 
        Project::Status::EXPANDING,
        "<span style=\"color: #AAAAAA\">Expand uploaded data</span>",
        "<span style=\"color: #AAAAAA\">Extract uploaded archives to enable browsing on the downloads page.</span>",
        "<span style=\"color: #AAAAAA\">(Occurs after uploading and before validating.)</span>",
      ],
      [
        :preview, 
        (@project.project_archives.all.find { |pa| pa.status == ProjectArchive::Status::EXPANDED } ? PreviewBrowser::Status::GENERATING_PREVIEW : false),
        "#{@project.has_preview? ? "Rebuild" : "Build"} GBrowse preview",
        @project.has_preview? ? link_to("Preview uploaded data files in GBrowse.", "http://gbrowse.oicr.on.ca/fgb2/gbrowse/#{organism}_preview/", :target => "_blank") : "Build a preview browser for this project.",
        "(Data must be expanded.)",
      ],
      [
        :expand_and_validate,
        Project::Status::VALIDATING,
        "Validate data",
        "Check for consistency and generate ChadoXML for load into database.",
        "(Please first upload data.)"
      ],
      [
        :load,
        Project::Status::LOADING,
        "Load data",
        "Load generated ChadoXML into the DCC database.",
        "(Requires a validated submission.)"
      ],
      [
        :find_tracks,
        Project::Status::FINDING,
        "Find tracks",
        "Scan uploaded submission for tracks suitable for display in GBrowse.",
        "(Requires the submission to be loaded into Chado.)"
      ],
      [
        :configure_tracks,
        Project::Status::CONFIGURING,
        "Configure tracks",
        "Preview and configure display of found tracks in GBrowse.",
        "(Requires that tracks have been discovered.)"
      ],
#      [
#        :build_report,
#        Project::Status::REPORTING,
#        @project.report_generated? ? "Re-build GEO package" : "Build GEO package",
#        "#{
#          if @project.reported? then
#            "Re-generate a GEO submission for this project (NOTE: already sent to GEO!)"
#          elsif @project.report_tarball_generated? then
#            "Re-generate a GEO submission for this project (" + link_to("click to send to GEO", :action => :configure_geo, :id => @project.id, :send_to_geo => "send_to_geo") + ")"
#          elsif @project.report_generated? then
#            "Re-generate a GEO submission for this project (" + link_to("click to configure", :action => :configure_geo, :id => @project.id) + ")"
#          else
#            "Generate a GEO submission for this project (if appropriate)."
#          end
#        }",
#        "(Only for array submission that have not already been submitted.)"
#      ],
      [
        :release,
        Project::Status::AWAITING_RELEASE,
        "Approve for release",
        "Approve tracks for release by the DCC. (See #{link_to "checklist", { :action => :release, :id => @project }}.)",
        "(Requires that tracks have been configured.)"
      ]
    ]
    if current_user.is_a?(Moderator) then
      command_definitions.push [
        :publish,
        Project::Status::PUBLISHING,
        "Record publish date",
        "Track when this submission was available in the public GBrowse/modMine/GEO.",
        "(Requires that project has been released.)"
      ]
      @user_can_write = true
    end
    is_running = !command_definitions.find { |cd| cd[1] == @project.status }.nil?
    command_definitions.each do |definition|
      (action, state, link, description, disabled_description, url) = definition
      # Don't show the expanding option unless it's actually occuring; the user should never have to click it
      next if action == :expand && @project.status != Project::Status::EXPANDING
      pos += 1
  %>
    <div style="clear:both">
      <div class="arrow">
        <%= 
            if pos == 1 && (Project::Status::ok_next_states(@project).last == state) then
              image_tag "arrows/single.png", :alt=> "=>"
            elsif (Project::Status::ok_next_states(@project)[-1] == state) then
              image_tag "arrows/end.png", :alt=> "=>"
            elsif pos == 1 && (Project::Status::ok_next_states(@project).include?(state)) then
              image_tag "arrows/start.png", :alt=> "&nbsp;"
            elsif (Project::Status::ok_next_states(@project).include?(state)) then
              image_tag "arrows/continue.png", :alt=> "&nbsp;"
            elsif (@project.status == state) then
              image_tag "working.gif", :alt=> "...", :valign => "middle"
            elsif (state.is_a?(FalseClass) && !Project::Status::is_active_state(@project.status)) then
              image_tag "arrows/bar.png", :alt=> "|", :valign => "middle"
            else
              "&nbsp;"
            end
        %>
      </div>
      <div class="action">
        <%= 
            if url then
              link_to_if(
                @user_can_write && Project::Status::ok_next_states(@project).include?(state),
                link, url
              ) 
            else
              link_to_if(
                @user_can_write && Project::Status::ok_next_states(@project).include?(state),
                link, { :action => action, :id => @project }
              ) 
            end
        %>
      </div>
      <div class="desc">
        <%= description %>
        <% unless is_running || (@user_can_write && Project::Status::ok_next_states(@project).include?(state)) then %>
          <br/>
          <span class="additionalinfo"><%= disabled_description unless (is_running || (@user_can_write && Project::Status::ok_next_states(@project).include?(state))) %></span>
        <% end %>
      </div>
    </div>
  <% end %>
  <br style="clear:both"/><br/>

  <h2>Comments</h2>
  <%= form_tag %><span class="comment">Add comment:</span><br/>
    <span class="signature">
      <%= text_field_tag "new_comment", "", :size => 30 %>
      <%= submit_tag "Add" %>
    </span>
  </form>
  <% if @comments.size > 0 %>
    <div id="comments">
      <ol>
        <% @comments.each do |comment| %>
          <li>
          <span class="comment"><%= comment.comment %></span><br/>
          <span class="signature">&#8212; <%= comment.user.name %> (<%= comment.created_at %>)</span>
          </li>
        <% end %>
      </ol>
    </div>
  <% end %>
  <br style="clear:both"/><br/>

  <h2 align="left"><a name="uploaded_data" style="color:black">Uploaded Data:</a><hr align="left"/></h2>
    <table border="0" style="margin-top: 10px;" class="status">
      <tr>
        <th>&nbsp;</th>
        <td colspan="2">
          <table border="0" class="archive_list">
            <tr>
              <th style="font-weight: normal;" colspan="5">
                <%= link_to_if(!@project.released? && @user_can_write && @num_active_archives > 0 && @project.status != Expand::Status::EXPANDING, "Expand All Active Archives", { :action => :expand_all, :id => @project }) unless @project.project_archives.blank? %>
                <%= " | " + link_to_if(!@project.released? && @user_can_write && @num_archives > @num_active_archives && @project.status != Expand::Status::EXPANDING, "Use All Archives", { :action => :activate_all, :id => @project }, :confirm => "This will activate all archives, requiring the re-expansion of all active archives before validation. Continue?") unless @project.project_archives.blank? %>
                <%= " | " + link_to_if(!@project.released? && @user_can_write && @num_active_archives > 0 && @project.status != Expand::Status::EXPANDING, "Don't use any Archives", { :action => :deactivate_all, :id => @project }, :confirm => "This will deactivate all archives. You will have to add a new archive or activate an existing one before validation. Continue?") unless @project.project_archives.blank? %>
              </th>
            </tr>
            <tr><th>&nbsp;</th><th>File</th><th>Size</th><th>Updated</th><th>&nbsp;</th></tr>
            <% @project.project_archives.reverse.each do |archive| %>
              <tr>
                <th style="padding-top: 10px;<%=" text-decoration: line-through" unless archive.is_active %>">Archive <%= archive.id %></th>
                <td style="padding-top: 10px;<%=" text-decoration: line-through" unless archive.is_active %>"><%= archive.file_name %></td>
                <td style="padding-top: 10px;<%=" text-decoration: line-through" unless archive.is_active %>"><%= 
                  if archive.file_size.to_f >= (1024**2) then
                        "#{(archive.file_size.to_f / 1024**2).round(1)}M"
                  elsif archive.file_size.to_f >= (1024) then
                        "#{(archive.file_size.to_f / 1024).round(1)}K"
                  else
                    archive.file_size 
                  end
                %></td>
                <td style="padding-top: 10px;<%=" text-decoration: line-through" unless archive.is_active %>"><%= archive.file_date.strftime("%b %d %H:%M") unless archive.file_date.nil? %></td>
                <td style="padding-top: 10px; font-size: 80%"<%= " rowspan=\"#{archive.project_files.size+1}\"" if archive.is_active %>>
                  <%= "(<i>#{archive.comment}</i>)<br/>" if !archive.comment.nil? && archive.comment.length > 0 %>
                  <% unless @project.status == Expand::Status::EXPANDING then -%>
                    <%=
                        if archive.status == ProjectArchive::Status::NOT_EXPANDED || (archive.project.project_archives.find_all { |pa| pa.is_active && pa != archive }.size > 0) then
                          link_to_if !@project.released? && @user_can_write && archive.file_size.to_i > 0, "Use only this archive", { :action => :expand, :id => archive }, :confirm => "This will deactivate all other archives, and expand just this one. Continue?"
                        else
                          link_to_if !@project.released? && @user_can_write && archive.file_size.to_i > 0, "Re-expand", { :action => :expand, :id => archive }
                        end
                    -%>
                    <br/>
                    <%= 
                      if archive.is_active then
                        link_to_if !@project.released? && @user_can_write && archive.file_size.to_i > 0, "Don't use", { :action => :deactivate_archive, :id => archive }
                      else
                        link_to_if !@project.released? && @user_can_write && archive.file_size.to_i > 0, "Not currently in use.  Click to include.", { :action => :activate_archive, :id => archive }
                      end
                    -%>
                  <% end %>
                  <br/>
                  <%= archive.status -%>
                </td>
              </tr>
              <% if archive.is_active then archive.project_files.each { |file| %>
                <tr>
                  <td style="font-size:70%; text-align: right"><%= link_to_if(!@project.released?, "replace this", :action => :upload_replacement, :id => @project, :replace => file) unless file.is_overwritten %></th>
                  <td<%= " style=\"text-decoration: line-through\"" if file.is_overwritten %>><%= 
                    if File.basename(file.file_name).size > 25 then
                      if File.basename(file.file_name) != file.file_name then
                      "<span style=\"color: #888\">.../</span>" + File.basename(file.file_name) 
                      else
                        File.basename(file.file_name) 
                      end
                    else
                      if file.file_name.size > 25 then
                        "<span style=\"color: #888\">..." + 
                        file.file_name[-25,25].sub("#{File.basename(file.file_name)}", '</span>\0')
                      else
                        "<span style=\"color: #888\">" + 
                        file.file_name.sub("#{File.basename(file.file_name)}", '</span>\0')
                      end
                    end
                    %></td>
                  <td style="text-align: right"><%= 
                    if file.is_overwritten then 
                      "&nbsp;" 
                    else 
                      if file.file_size.to_f >= (1024**2) then
                        "#{(file.file_size.to_f / 1024**2).round(1)}M"
                      elsif file.file_size.to_f >= (1024) then
                        "#{(file.file_size.to_f / 1024).round(1)}K"
                      else
                        file.file_size 
                      end
                    end 
                    %></td>
                  <td><%= if file.is_overwritten then "&nbsp;" else file.file_date.strftime("%b %d %H:%M") end %></td>
                </tr>
              <% } end %>
            <% end %>
          </table>
        </td>
      </tr>
    </table>
  </div>
