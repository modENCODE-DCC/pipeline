<%
  @max_entries = 25 unless defined?(@max_entries)
%>
<h1>
  <%= tag = TrackTag.find_by_project_id_and_name(@project_id, "Investigation Title"); tag ? tag.value : Project.find(@project_id).name %> 
  (<%= tag = TrackTag.find_by_project_id_and_name(@project_id, "Project"); tag ? tag.value : Project.find(@project_id).user.pis.join(", ") %> project<%= 
   v = TrackTag.find_by_project_id_and_name(@project_id, "Lab"); v ? ", #{v.value} subgroup" : "" 
  %>)
</h1>
<h2>General Description</h2>
<%= tag = TrackTag.find_by_project_id_and_name(@project_id, "Experiment Description"); tag ? tag.value.gsub("\n", "<br/>\n") : "[Please Fill In]" %> 
<br/><br/>
<h2>Protocols</h2>
<ol>
  <%
    type_tags = TrackTag.find_all_by_project_id_and_cvterm(@project_id, 'protocol_type')
    url_tags = TrackTag.find_all_by_project_id_and_cvterm(@project_id, 'protocol_url')

    growth = ["grow", "harvest", "culture", "nucleic_acid_extraction", "RNA extraction", "DNA extraction", "purify", "dissect", "organism_purification_protocol", "biosample_preparation_protocol"]
    preparation = ["PCR", "PCR_amplification","chromatin_immunoprecipitation","labeling","hybridization","microarray_scanning_protocol", "reverse_transcription", "sequencing_protocol", "bridge PCR", "sequencing"]
    analysis = ["data_analysis_protocol", "quantile_normalization", "quantile_normalization_protocol_type", "base_calling_protocol", "pairwise_sequence_alignment", "peak_finding_data_analysis_protocol"]

    growth_protocols = type_tags.find_all { |tag| growth.include?(tag.value) }
    preparation_protocols = type_tags.find_all { |tag| preparation.include?(tag.value) }
    analysis_protocols = type_tags.find_all { |tag| analysis.include?(tag.value) }
    other_protocols = type_tags.find_all { |tag| !growth.include?(tag.value) && !preparation.include?(tag.value) && !analysis.include?(tag.value) }
  %>
  <% if growth_protocols.size > 0 then %>
    <li>
      <b>Growth and isolation:</b>
      <%= 
        type_tags.size > 0 ? growth_protocols.sort { |p1, p2| 
          p1.history_depth <=> p2.history_depth 
        }.map { |protocol| protocol.name }.uniq.map { |protocol_name| 
        url_tags.find { |ut| ut.name == protocol_name }.value.nil? ? 
        link_to(protocol_name, "http://wiki.modencode.org/project/index.php?title=#{protocol_name}") : 
        link_to(protocol_name, url_tags.find { |ut| ut.name == protocol_name }.value)
        }.join(", ") : "[Please Fill In]"
      %>
    </li>
  <% end %>
  <% if preparation_protocols.size > 0 then %>
    <li>
      <b>Sample preparation:</b>
      <%= 
        type_tags.size > 0 ? preparation_protocols.sort { |p1, p2| 
          p1.history_depth <=> p2.history_depth 
        }.map { |protocol| protocol.name }.uniq.map { |protocol_name| 
        url_tags.find { |ut| ut.name == protocol_name }.value.nil? ? 
        link_to(protocol_name, "http://wiki.modencode.org/project/index.php?title=#{protocol_name}") : 
        link_to(protocol_name, url_tags.find { |ut| ut.name == protocol_name }.value)
        }.join(", ") : "[Please Fill In]"
      %>
    </li>
  <% end %>
  <% if analysis_protocols.size > 0 then %>
    <li>
      <b>Data Analysis:</b>
      <%= 
        type_tags.size > 0 ? analysis_protocols.sort { |p1, p2| 
          p1.history_depth <=> p2.history_depth 
        }.map { |protocol| protocol.name }.uniq.map { |protocol_name| 
        url_tags.find { |ut| ut.name == protocol_name }.value.nil? ? 
        link_to(protocol_name, "http://wiki.modencode.org/project/index.php?title=#{protocol_name}") : 
        link_to(protocol_name, url_tags.find { |ut| ut.name == protocol_name }.value)
        }.join(", ") : "[Please Fill In]"
      %>
    </li>
  <% end %>
  <% if other_protocols.size > 0 then %>
    <li>
      <b>Other Protocols:</b>
      <%= 
        other_protocols.sort { |p1, p2| 
          p1.history_depth <=> p2.history_depth 
        }.map { |protocol| protocol.name }.uniq.map { |protocol_name| 
        url_tags.find { |ut| ut.name == protocol_name }.value.nil? ? 
        link_to(protocol_name, "http://wiki.modencode.org/project/index.php?title=#{protocol_name}") : 
        link_to(protocol_name, url_tags.find { |ut| ut.name == protocol_name }.value)
        }.join(", ")
      %>
    </li>
  <% end %>
</ol>

  <%
    animals = ["stage", "strain", "whole_organism", "cell_line", "developmental_stage", "organism", "organism_part", "strain_or_line", "cell line culture"]
    #strains = ["strain", "whole_organism", "strain_or_line", "organism", "cell_line"]
    #tissue = ["organism_part"]
    #stage = ["developmental stage", "stage", "developmental_stage"]
    #sex = ["sex"]
    antibodies = ["antibody"]
    arrays = ["ADF", "array_data_file", "array", "BPMAP"]
    samples = [ "mRNA", "polyA_RNA", "RNA", "polyadenylated_mRNA", "total_RNA" ]
    conditions = ["GrowthCondition", "temperature"]
    external_ids = ["GEO_record", "dbEST_record", "TraceArchive_record", "ShortReadArchive_project_ID (SRA)"]
    #modencode_ids = ["modENCODE Reference"]
    modencode_ids = ["referenced_submission"]

    animal_reagents = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, animals])
    #strain_reagents = TrackTag.find(:all, :conditions => ["project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, strains])
    antibody_reagents = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, antibodies])
    array_reagents = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, arrays])
    sample_reagents = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, samples])
    repository_records = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, external_ids])
    modencode_records = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, modencode_ids])
    condition_reagents = TrackTag.find(:all, :conditions => [ "project_id = ? AND cvterm = ANY(ARRAY[?])", @project_id, conditions])

  %>
<%= "<h2>Experimental Reagents</h2>" if (antibody_reagents.size+array_reagents.size) > 0 %>
<ol>
  <% if condition_reagents.size > 0 then %>
    <li>
      <b>Growth Conditions:</b>
    <%=
      counter = 0
      condition_reagents.sort{ |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
          counter += 1
          name = tag.value 
	  #name += tag.name=="age" ? "h" : ""
	  name
        }.uniq.join(", ") 
     %>
      <%= ", and #{condition_reagents.size - @max_entries} more." if condition_reagents.size > @max_entries %>
    </li>
  <% end %>

  <% if antibody_reagents.size > 0 then %>
    <li>
      <b>Antibodies:</b>
      <%= antibody_reagents.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
        name = tag.value 
        url_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'data_url')
        name_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'official name')

        short_name = name_tag ? name_tag.value : name.split('&oldid')[0]
        if url_tag then
          link_to short_name, "#{url_tag.value}#{name}"
        elsif name =~ /^[A-Z]\w+:/ then
          link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        elsif name =~ /&oldid=/ || name =~ /&amp;oldid=/ then
          link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        else
          short_name
        end
      }.uniq.join(", ") %>
      <%= ", and #{antibody_reagents.size - @max_entries} more." if antibody_reagents.size > @max_entries %>
    </li>
  <% end %>
  <% if array_reagents.size > 0 then %>
    <li>
      <b>Arrays:</b>
      <%= array_reagents.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
        name = tag.value 
        url_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'data_url')
        name_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'official name')

        short_name = name_tag ? name_tag.value : name.split('&oldid')[0]
        if url_tag then
          link_to short_name, "#{url_tag.value}#{name}"
        elsif name =~ /^[A-Z]\w+:/ then
          link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        elsif name =~ /&oldid=/ || name =~ /&amp;oldid=/ then
          link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        else
          short_name
        end
      }.uniq.join(", ") %>
      <%= ", and #{array_reagents.size - @max_entries} more." if array_reagents.size > @max_entries %>
    </li>
  <% end %>
</ol>
<%= "<h2> Sample Details </h2>" if (animal_reagents.size+sample_reagents.size) > 0 %>

<ol>
  <% if animal_reagents.size > 0 then %>
    <li>
      <b>Animals/Lines:</b>
      <%= 
        counter = 0 
        animal_reagents.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
          counter += 1
          name = tag.value 
          url_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'data_url')
          name_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'official name')
          short_name = name_tag ? name_tag.value : name.split('&oldid')[0]
          if url_tag then
            link_to short_name, "#{url_tag.value}#{name}"
          elsif name =~ /^[A-Z]\w+:/ then
            link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
          elsif name =~ /&oldid=/ || name =~ /&amp;oldid=/ then
            link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
          else
            short_name
          end
        }.uniq.join(", ") 
      %>
      <%= ", and #{animal_reagents.size - @max_entries} more." if animal_reagents.size > @max_entries %>
    </li>
  <% end %>

  <% related_projects = Array.new %>
  <% if sample_reagents.size > 0 then %>
    <li>
      <b>Samples:</b>
      <%= sample_reagents.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
        name = tag.value 
        url_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'data_url')
        name_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'official name')
	related_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'modENCODE Reference')
	related_projects += TrackTag.find_all_by_name(name).map{|t| t.project_id}
        short_name = name_tag ? name_tag.value : name.split('&oldid')[0]
	v = ""
        if url_tag then
          v = link_to short_name, "#{url_tag.value}#{name}"
        elsif name =~ /^[A-Z]\w+:/ then
          v = link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        elsif name =~ /&oldid=/ || name =~ /&amp;oldid=/ then
          v = link_to short_name, "http://wiki.modencode.org/project/index.php?title=#{name}"
        else
          v = short_name
        end
	if related_tag then
          v += " (DCC-#{related_tag.value})"
	end
	v
      }.uniq.join(", ") %>
      <%= ", and #{sample_reagents.size - @max_entries} more." if sample_reagents.size > @max_entries %>
    </li>
  <% end %>
  <% if repository_records.size > 0 then %>
    <li>
      <b>External Links:</b>
      <%= repository_records.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
        name = tag.value 
        url_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, 'data_url')
        name_tag = TrackTag.find_by_project_id_and_name_and_cvterm(@project_id, name, external_ids)

        if url_tag then
          link_to name_tag.value, url_tag.value
        elsif name_tag then
          name_tag
        else
          tag.cvterm + ":" + name
        end
      }.uniq.join(", ") %>
      <%= ", and #{repository_records.size - @max_entries} more." if repository_records.size > @max_entries %>
    </li>
  <% end %>
</ol>
<% related_projects.delete(@project_id) %>
<br />

<%= "<h2>Related modENCODE submissions:</h2>" if (related_projects.size+modencode_records.size) > 0 %>
<ul>
  <% if modencode_records.size > 0 then %>
     <%= modencode_records.sort { |t1, t2| t1.value <=> t2.value }[0...@max_entries].map { |tag| 
        submission_num = tag.value.to_i 
        begin
	"<li><b>DCC-#{submission_num}</b>: #{link_to Project.find(submission_num).name, :action => 'citation', :controller => 'public', :id => submission_num}</li>"
        rescue
          "<li><b>DCC-#{submission_num}</b></li>"
        end
      }.uniq.join("\n") %>
      <%= ", and #{modencode_records.size - @max_entries} more." if modencode_records.size > @max_entries %>
   <% end %>
  <%=
	related_projects.uniq.map{ |id|
	p = Project.find(id)
        
        url = "/submit/public/citation/#{p.id}"
        "<li><b>DCC-#{p.id.to_s}</b>: #{link_to(p.name, url) }</li>"
	}.uniq.join("\n") 
  %>
</ul>
<br />
<b>Release Date:</b> <%= tag = TrackTag.find_by_project_id_and_name(@project_id, "Public Release Date"); tag ? tag.value : "[Please Fill In]" %> 
